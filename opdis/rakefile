# Ruby rakefile for Opdis module
# Copyright 2010 Thoughtgang <http://www.thoughtgang.org>

require 'rake/gempackagetask'
require 'rake/packagetask'
require 'rake/rdoctask'
require 'rake/testtask'

UNIT_TEST_FILES = FileList[
  'tests/ut_*.rb'
]

task :default => [:test]

# ----------------------------------------------------------------------
spec = Gem::Specification.new do |spec|
  spec.name = 'Opdis'
  spec.version = '1.3.0'
  spec.summary = 'Ruby extension library providing an API to libopdis'
  spec.description = %{Opdis is a disassembler based on the GNU binutils
  libopcodes disassembler. The strings generated by libopcodes are
  translated into Instruction and Operand objects, and disassembly
  algorithms such as linear and control-flow are provided.}

  spec.author = 'TG Community'
  spec.email = 'community@thoughtgang.org'
  spec.homepage = 'http://rubyforge.org/projects/opdis/'
  spec.rubyforge_project = 'opdis'
  spec.licenses = [ "GPLv3" ]

  spec.required_ruby_version = '>= 1.8.7'
  spec.requirements = [ 'opdis library and headers',
                        'GNU binutils library and headers' ]

  spec.files = Dir['module/*.c', 'module/*.h', 'lib/Opdis.rb',
                   'examples/*.rb', 'README', 'ChangeLog', 'LICENSE',
                   'LICENSE.README']
  spec.extra_rdoc_files = Dir['module/rdoc_input/*.rb']
  spec.extensions = Dir['module/extconf.rb']
  spec.test_files = nil
  spec.test_files = UNIT_TEST_FILES
end
Rake::GemPackageTask.new(spec) do |pkg|
  pkg.need_zip = false
  pkg.need_tar = true
end

# ----------------------------------------------------------------------
Rake::RDocTask.new do |rd|
  rd.main = 'README.rdoc'
  rd.rdoc_dir = 'doc/html'
  rd.rdoc_files << 'README.rdoc'
  rd.rdoc_files += Dir['lib/BFD.rb']
  rd.rdoc_files += Dir['module/rdoc_input/*.rb']
end

# ----------------------------------------------------------------------
desc 'Run unit tests'                                                           
Rake::TestTask.new do |t|
    # path to local copy of Opdis module and .so 
    t.libs << Dir.pwd + File::SEPARATOR + 'lib'
    t.libs << Dir.pwd + File::SEPARATOR + 'module'

    # path to local copy of BFD module and .so 
    bfd_dir = Dir.pwd + File::SEPARATOR + '..' + File::SEPARATOR + 'bfd'
    t.libs << bfd_dir + File::SEPARATOR + 'lib'
    t.libs << bfd_dir + File::SEPARATOR + 'module'

    t.test_files = UNIT_TEST_FILES
    t.verbose = true
    t.warning = true                    # Run ruby with -w
end
